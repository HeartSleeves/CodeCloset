{"version":3,"sources":["components/Contact/index.js","components/Snippet/index.js","utils/queries.js","assets/spinner.gif","components/SnippetList/index.js","pages/Home.js","utils/auth.js","components/Header/index.js","pages/Profile.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/CommentList/index.js","components/AddComment/index.js","pages/SingleSnippet.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","pages/CreateSnippet.js","App.js","index.js"],"names":["Contact","id","href","Snippet","snippet","title","_id","desc","text","author","date","className","to","QUERY_SNIPPET","gql","QUERY_SINGLE_SNIPPET","QUERY_USER","QUERY_ME","SnippetList","useQuery","loading","data","snippets","length","map","snippetTitle","snippetDescription","snippetText","snippetAuthor","createdAt","src","spinner","alt","Home","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Header","Auth","loggedIn","onClick","logout","htmlFor","type","name","Profile","emailParam","useParams","email","variables","me","getProfile","user","LOGIN","ADD_SNIPPET","ADD_COMMENT","ADD_USER","Login","props","useState","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","console","log","handleChange","target","value","onSubmit","placeholder","onChange","Signup","addUser","CommentList","comments","comment","commentText","commentAuthor","AddComment","snippetId","addComment","SingleSnippet","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","role","reducer","state","action","products","cartOpen","cart","product","purchaseQuantity","newState","filter","categories","currentCategory","AppContext","createContext","Provider","AppProvider","initialState","useReducer","dispatch","CreateSnippet","addSnippet","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20b844f4.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Contact (){\n    return (<footer>\n        <p id=\"networklinks\">\n          Find Ivy at <a href=\"https://github.com/Love-Ivy\">Github</a> and{\" \"}\n          <a href=\"https://www.linkedin.com/in/ivylovegood/\">LinkedIn</a>.\n          Find Adeline at <a href=\"https://github.com/adelineagus\">Github</a>\n        </p>\n      </footer>);\n}\n\nexport default Contact","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Snippet (snippet){\n    const{\n        title,\n        _id,\n        desc,\n        text,\n        author,\n        date,\n        // language,\n        // tags,\n    } = snippet;\n\n    return (\n        <article className=\"card\">\n            <div className=\"cardheader\">\n            <Link to={`/snippets/${_id}`}>\n                <h4 className=\"cardtitle\">{title}</h4>\n            </Link>\n            <div>\n               <p className=\"carduser\">Created by: {author}</p> \n               <p className=\"carddate\">{date}</p>\n            </div>\n        </div>\n        <div>\n                <p className=\"carddesc\">{desc}</p>\n            </div>\n            <div>\n                <code className=\"cardsnippet\">{text}</code>\n            </div>\n            {/* <div>\n                <p className=\"cardlang\">Language</p>\n            </div> */}\n    </article>        \n    );\n}\n\nexport default Snippet;","import { gql } from '@apollo/client';\n\nexport const QUERY_SNIPPET = gql`\n  {\n    snippets {\n      _id\n      snippetTitle\n      snippetDescription\n      snippetText\n      snippetAuthor\n      createdAt\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_SNIPPET = gql`\n  query getSingleSnippet($snippetId: ID!) {\n    snippet(snippetId: $snippetId) {\n      _id\n      snippetTitle\n      snippetDescription\n      snippetText\n      snippetAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n        commentAuthor\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      _id\n      email\n      snippets {\n        _id\n        snippetTitle\n        snippetDescription\n        snippetText\n        snippetAuthor\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      email\n      snippets {\n        _id\n        snippetTitle\n        snippetDescription\n        snippetText\n        snippetAuthor\n        createdAt\n      }\n    }\n  }\n`;","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect } from 'react';\nimport Snippet from '../Snippet';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_SNIPPET } from '../../utils/queries';\nimport spinner from '../../assets/spinner.gif';\n\nfunction SnippetList() {\n  const { loading, data } = useQuery(QUERY_SNIPPET);\n  const snippets = data?.snippets || [];\n\n  return (\n    <section id=\"searchresults\" className=\"carddisplay\">\n      {snippets.length ? (\n        <div>\n          {snippets.map((snippet) => (\n            <Snippet\n            key={snippet._id}\n            _id={snippet._id}\n            title={snippet.snippetTitle}\n            desc={snippet.snippetDescription}\n            text={snippet.snippetText}\n            author={snippet.snippetAuthor}\n            date={snippet.createdAt}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any snippets yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </section>\n  );\n}\n\nexport default SnippetList;\n","import React from \"react\";\nimport Contact from \"../components/Contact\";\nimport SnippetList from \"../components/SnippetList\"\n\nconst Home = () => {\n  return (\n\n    <div>\n    <div>\n        <h3 id=\"searchparams\" className=\"title\">All Snippets</h3>\n    </div>\n        <SnippetList />\n    <footer>\n        <h5>Created by: Ivy Lovegood and Adeline Aguspranoto</h5>\n        <Contact />\n    </footer>\n\n</div>\n  );\n}\n\nexport default Home;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        // localStorage.removeItem('id_token');\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React from 'react';\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n    return (\n        <div id=\"navbar\">\n          <h2 className=\"navbtn\" id=\"profile\">\n          <Link to=\"/profile\">\n          Profile\n          </Link>\n         </h2>\n              <h2 className=\"navbtn\" id=\"logout\">\n              <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a></h2>                         \n        </div>\n    ); } else {\n      return (\n        <div id=\"navbar\">\n        <h2 className=\"navbtn\" id=\"signup\">\n        <Link to=\"/signup\">\n              Signup\n              </Link>\n            </h2>\n            <h2 className=\"navbtn\" id=\"login\">\n            <Link to=\"/login\">\n              Login\n              </Link>\n            </h2>\n                  </div>\n      );\n    }\n  }\n  return (\n    <header>\n    <h1 id=\"apptitle\" className=\"title\">\n      <Link to=\"/\">\n          Code Closet\n          </Link>\n          </h1>\n          <nav id=\"navbar\">\n        {showNavigation()}\n        <div id=\"search\">\n                <label htmlFor=\"searchbar\">Search</label>\n                <input type=\"search\" className=\"searchbar\" id=\"searchbar\" name=\"searchbar\">\n                  </input>\n            </div>\n                  {Auth.loggedIn() ? (\n                    \n                      <button id=\"newsnippetbtn\">\n                      <Link to=\"/createsnippet\">\n                  Create New Snippet\n                  </Link>\n                  </button>\n                    ): ('')} \n              </nav>\n    </header>\n  )\n}\n\nexport default Header;\n","import React from 'react';\nimport { Link, Navigate, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport Auth from '../utils/auth';\n\nimport Snippet from '../components/Snippet';\nimport { QUERY_ME, QUERY_USER } from '../utils/queries';\nimport spinner from '../assets/spinner.gif'\n\nconst Profile = ({snippet}) => {\n    const { email: emailParam } = useParams();\n\n    const { loading, data} = useQuery(emailParam ? QUERY_USER : QUERY_ME, {\n      variables:  {email: emailParam},\n    })\n    const email = data?.me || data?.email || {};\n    \n    if (Auth.loggedIn() && Auth.getProfile().data.email === emailParam) {\n        return <Navigate to=\"/me\" />;\n    }\n\n    const user = Auth.getProfile().data.email;\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (!email?.email) {\n        return (\n            <h3>\n                You must be logged in!\n            </h3>\n        );\n    }\n    \n    return (\n      <div>\n      <section className=\"profileheader\">\n        <h2>Welcome {user}!</h2>\n      </section>\n      <section id=\"searchresults\" className=\"carddisplay\">\n          {email.snippets.length ? (\n            <div><h2>You've made {email.snippets.length} Posts:</h2>\n              {email.snippets.map((snippet) => (\n                <Snippet\n                key={snippet._id}\n                _id={snippet._id}\n                title={snippet.snippetTitle}\n                desc={snippet.snippetDescription}\n                text={snippet.snippetText}\n                author={snippet.snippetAuthor}\n                date={snippet.createdAt}\n                />\n                ))}\n            </div>\n          ) : (\n            <Link to={'/createsnippet'}>\n          <h2>Create your first Snippet!</h2>\n            </Link>\n          )}\n          {loading ? <img src={spinner} alt=\"loading\" /> : null}\n        </section>\n          </div>\n      );\n}\n\nexport default Profile","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_SNIPPET = gql`\n  mutation addSnippet($snippetTitle: String!, $snippetDescription: String!, $snippetText: String!) {\n    addSnippet(snippetTitle: $snippetTitle, snippetDescription: $snippetDescription, snippetText: $snippetText) {\n      _id\n      snippetAuthor\n      createdAt\n      snippetTitle\n      snippetDescription\n      snippetText\n      comments {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_COMMENT = gql`\n  mutation addComment($snippetId: ID!, $commentText: String!) {\n    addComment(snippetId: $snippetId, commentText: $commentText) {\n      _id\n      snippetAuthor\n      createdAt\n      snippetTitle\n      snippetDescription\n      snippetText\n      comments {\n        _id\n        commentText\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login (props){\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  \n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n    return (\n<div>\n      <form onSubmit={handleFormSubmit} className=\"bigcard login-form\">\n        <div>\n          <h2 className=\"cardheader\">Login</h2>\n        </div>\n        <div className=\"cardinput\">\n          <div className=\"inputdiv\">\n            <label htmlFor=\"username\">Email</label>\n            <input \n            id=\"user-login\" \n            name=\"email\"\n            type=\"email\" \n            placeholder=\"Email\"\n            onChange={handleChange} />\n          </div>\n          <div className=\"inputdiv\">\n            <label htmlFor=\"password\">Password</label>\n            <input \n            id=\"password-login\" \n            name=\"password\"\n            type=\"password\" \n            placeholder=\"Password\"\n            onChange={handleChange} />\n          </div>\n          {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n          <button type=\"submit\" id=\"submitbtn\">Login</button>\n        </div>\n        <div className=\"commentdata\">\n          <Link to=\"/signup\">Signup instead?</Link></div>\n      </form>\n</div>\n);\n }\n\n export default Login","import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(){\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        ...formState\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n    return (\n        <div>\n      <form onSubmit={handleFormSubmit} className=\"bigcard login-form\">\n        <div>\n          <h2 className=\"cardheader\">Signup</h2>\n        </div>\n        <div className=\"cardinput\">\n          <div className=\"inputdiv\">\n            <label htmlFor=\"username\">Email</label>\n            <input \n            id=\"user-login\" \n            type=\"email\" \n            name=\"email\"\n            placeholder=\"Email\"\n            onChange={handleChange} />\n          </div>\n          <div className=\"inputdiv\">\n            <label htmlFor=\"password\">Password</label>\n            <input \n            id=\"password-login\" \n            type=\"password\" \n            name=\"password\"\n            placeholder=\"Password\"\n            onChange={handleChange} />\n          </div>\n          <button type=\"submit\" id=\"submitbtn\">Signup</button>\n        </div>\n        <div className=\"commentdata\">\n        <Link to=\"/login\">Login instead?</Link></div>\n      </form>\n</div>\n    );\n}\n\nexport default Signup;\n","import React, { useEffect } from 'react';\n// import Comment from '../Comment';\n// import { useParams } from 'react-router-dom';\n// import { useQuery } from '@apollo/client';\n// import { QUERY_SINGLE_SNIPPET, QUERY_COMMENTS } from '../../utils/queries';\nimport spinner from '../../assets/spinner.gif';\n\nconst CommentList = ({ comments = [] }) => {\n  if (!comments.length) {\n    return <h3>No Comments Yet</h3>;\n  }\n  return(\n\n          <section className=\"comments\">\n            <div className=\"commentcard\">\n                {comments &&\n                comments.map((comment) => (\n                  <div key={comment._id} className=\"commentcard\">\n                  <div className=\"commenthead\"></div>\n                    <div className=\"comment\">\n                      <p className=\"commentcontent\">\n                        {comment.commentText}\n                      </p>\n                      {/* <Link to={`/profile/${userid}`}> */}\n                      <p className=\"commentdata\">- {comment.commentAuthor}</p>\n                        <p>{comment.createdAt}</p>\n                      {/* </Link> */}\n                    </div>\n                  </div>\n                ))}\n                </div>\n    \n    {/* <div className=\"bigcard hidden\" id=\"addcomment\">\n    <div className=\"cardinput\">\n      <div className=\"inputdiv\">\n      <div className=\"inputdiv\">\n        <label for=\"bodyinput\">Comment</label>\n        <textarea\n          id=\"bodyinput\"\n          name=\"bodyinput\"\n          placeholder=\"What would you like to say?\"\n          ></textarea>\n      </div>\n      <button type=\"submit\" id=\"submitbtn\">Submit</button>\n    </div>\n    </div>\n  </div> */}\n  </section>\n          );\n        }\n                        \n  \n\n  export default CommentList;","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_COMMENT } from '../../utils/mutations';\nimport { Link } from \"react-router-dom\";\nimport Auth from \"../../utils/auth\";\n\nconst AddComment = ({ snippetId }) => {\n  const [formState, setFormState] = useState({commentText: ''});\n  const [addComment, {error}] = useMutation(ADD_COMMENT);\n  \n  if (Auth.loggedIn()){\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try{ const {data} = addComment({\n      variables: {\n        snippetId,\n        commentText: formState.commentText,\n        commentAuthor: Auth.getProfile().data.email,\n      },\n    });\n  } catch (err) {\n    console.error(err)\n  }\n    \n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n    \n        return(\n            <form onSubmit={handleFormSubmit} className=\"bigcard hidden\" id=\"addcomment\">\n                <div className=\"cardinput\">\n                  <div className=\"inputdiv\">\n                  <div className=\"inputdiv\">\n                    <label htmlFor=\"commentText\">Comment</label>\n                    <textarea\n                      id=\"bodyinput\"\n                      name=\"commentText\"\n                      value={formState.commentText}\n                      placeholder=\"What would you like to say?\"\n                      onChange={handleChange}\n                      >\n                      </textarea>\n                  </div>\n                  <button type=\"submit\" id=\"submitbtn\">Add Comment</button>\n                </div>\n            </div>\n        </form>    \n    );} else { \n        return(\n            <p className=\"loginswitch\">\n            <Link to=\"/login\">\n                Login to comment  \n            </Link>\n            </p>\n            )\n          }\n    };\n\nexport default AddComment;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport CommentList from '../components/CommentList';\nimport AddComment from '../components/AddComment';\nimport { QUERY_SINGLE_SNIPPET } from '../utils/queries';\nimport Auth from '../utils/auth';\n\nconst SingleSnippet = () => {\n  const { snippetId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_SINGLE_SNIPPET, {\n    variables: { snippetId: snippetId },\n  });\n\n  const snippet = data?.snippet || {};\n  console.log(snippet)\n\n  // if (loading) {\n  //   return <div>Loading...</div>;\n  // } else if (Auth.loggedIn()){\n    return (\n      <div>\n    <article className=\"card\">\n            <div className=\"cardheader\">\n                <h4 className=\"cardtitle\">{snippet.snippetTitle}</h4>\n            <div>\n               <p className=\"carduser\">Created by: {snippet.snippetAuthor}</p> \n               <p className=\"carddate\">{snippet.createdAt}</p>\n            </div>\n        </div>\n        <div>\n                <p className=\"carddesc\">{snippet.snippetDescription}</p>\n            </div>\n            <div>\n                <code className=\"cardsnippet\">{snippet.snippetText}</code>\n            </div>\n            {/* <div>\n                <p className=\"cardlang\">{snippet.snippetLanguage}</p>\n              </div> */}\n    </article>\n        <CommentList comments={snippet.comments}/> \n        <AddComment snippetId={snippet._id}/>\n       </div>\n  );\n// } else {\n//   <h3>Login to view snippets</h3>\n// }\n};\n\nexport default SingleSnippet;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { useReducer } from 'react';\nimport {\n  UPDATE_SNIPPET,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from './actions';\n\n// The reducer is a function that accepts the current state and an action. It returns a new state based on that action.\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // Returns a copy of state with an update products array. We use the action.products property and spread it's contents into the new array.\n    case UPDATE_SNIPPET:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n    // Returns a copy of state, sets the cartOpen to true and maps through the items in the cart.\n    // If the item's `id` matches the `id` that was provided in the action.payload, we update the purchase quantity.\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((product) => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        }),\n      };\n\n    // First we iterate through each item in the cart and check to see if the `product._id` matches the `action._id`\n    // If so, we remove it from our cart and set the updated state to a variable called `newState`\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((product) => {\n        return product._id !== action._id;\n      });\n\n      // Then we return a copy of state and check to see if the cart is empty.\n      // If not, we set the cartOpen status to  `true`. Then we return an updated cart array set to the value of `newState`.\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    // Return the state as is in the event that the `action.type` passed to our reducer was not accounted for by the developers\n    // This saves us from a crash.\n    default:\n      return state;\n  }\n};\n\nexport function useSnippetReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","export const UPDATE_SNIPPET = \"UPDATE_SNIPPET\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import React, { createContext, useContext } from \"react\";\nimport { useSnippetReducer } from './reducers'\n\nconst AppContext = createContext();\nconst { Provider } = AppContext;\n\nconst AppProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useSnippetReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useAppContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppProvider, useAppContext };\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_SNIPPET } from '../utils/mutations';\n\nconst CreateSnippet = () => {\n\n  const [formState, setFormState] = useState({ snippetTitle: '', snippetDescription: '' , snippetText: ''});\n  const [addSnippet, {error}] = useMutation(ADD_SNIPPET);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try{ const {data} = addSnippet({\n      variables: {\n        ...formState\n      },\n    });\n  } catch (err) {\n    console.error(err)\n  }\n  window.location.assign('/profile');\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n    return (\n        <form onSubmit={handleFormSubmit} className=\"bigcard\" id=\"newsnippet\">\n    <div>\n      <h2 className=\"cardheader\">New Snippet</h2>\n    </div>\n    <div className=\"cardinput\">\n      <div className=\"inputdiv\">\n        <label htmlFor=\"snippetTitle\">Title</label>\n        <input\n          id=\"titleinput\"\n          type=\"text\"\n          name=\"snippetTitle\"\n          value={formState.snippetTitle}\n          placeholder=\"Title\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"inputdiv\">\n        <label htmlFor=\"snippetDescription\">Description</label>\n        <textarea\n          id=\"descinput\"\n          name=\"snippetDescription\"\n          value={formState.snippetDescription}\n          placeholder=\"What does it do?\"\n          onChange={handleChange}\n        ></textarea>\n      </div>\n      <div className=\"inputdiv\">\n        <label htmlFor=\"snippetText\">Content</label>\n        <textarea\n          id=\"bodyinput\"\n          name=\"snippetText\"\n          value={formState.snippetText}\n          placeholder=\"insert code here\"\n          onChange={handleChange}\n        ></textarea>\n      </div>\n      {/* <div className=\"inputdiv\">\n        <label htmlFor=\"langinput\">Language</label>\n        <input\n          id=\"langinput\"\n          type=\"text\"\n          name=\"snippetlanginput\"\n          placeholder=\"code language\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"inputdiv\">\n        <label htmlFor=\"taginput\">Tags</label>\n        <input\n          id=\"taginput\"\n          type=\"text\"\n          name=\"snippettaginput\"\n          placeholder=\"tags\"\n          onChange={handleChange}\n        />\n      </div> */}\n      <button type=\"submit\" id=\"submitbtn\">Submit</button>\n    </div>\n  </form>\n    );\n}\n\nexport default CreateSnippet;","\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport Home from './pages/Home';\nimport Header from './components/Header';\nimport Profile from './pages/Profile';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Contact from './components/Contact';\nimport SingleSnippet from './pages/SingleSnippet';\nimport NoMatch from './pages/NoMatch'\nimport { AppProvider } from './utils/GlobalState';\nimport CreateSnippet from './pages/CreateSnippet';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <AppProvider>\n            <Header />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route\n                path=\"/profile\"\n                element={<Profile />}\n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route\n                path='/createsnippet'\n                element={<CreateSnippet />}\n                />\n              <Route \n                path=\"/contact\" \n                element={<Contact />} \n              />\n              <Route \n                path=\"/snippets/:snippetId\"\n                element={<SingleSnippet />}\n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n          </AppProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}